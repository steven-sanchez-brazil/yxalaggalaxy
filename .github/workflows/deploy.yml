name: Deploy to GitHub Pages

on:
  #workflow_dispatch: # Solo se ejecuta manualmente
  workflow_run:
    workflows: ["Frontend CI"]
    types: [completed]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  prepare:
    name: üóÇÔ∏è Preparar artefacto
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Comprimir archivos
        run: |
          mkdir build
          cp index.html landing.html script.js styles.css build/
          tar -czf build.tgz build
      - name: Subir artefacto
        uses: actions/upload-artifact@v4
        with:
          name: sitio
          path: build.tgz

  check_network:
    name: üåê Verificar conectividad antes del deploy
    needs: prepare
    #runs-on: ubuntu-latest
    #runs-on: self-hosted
    runs-on: [self-hosted, macOS, X64]
    timeout-minutes: 5
    env:
      PING_COUNT: ${{ vars.PING_COUNT }} # define vars.PING_COUNT si quieres cambiar el 10 por defecto

    steps:
      - name: Hacer ping a 8.8.8.8
        run: |
          COUNT="${PING_COUNT:-10}"
          echo "üîé Comprobando conectividad..."
          echo "Ping con $COUNT paquetes‚Ä¶"
          ping -c "$COUNT" 8.8.8.8
      - name: Validar resultado del ping
        run: |
          if [ $? -ne 0 ]; then
            echo "‚ùå No hay respuesta de 8.8.8.8. Abortando despliegue."
            exit 1
          else
            echo "‚úÖ Conectividad OK, continuando..."
          fi

  deploy:
    name: üöÄ Publicar en GitHub Pages
    #needs: check_network
    needs: prepare
    runs-on: ubuntu-latest
    environment: { name: production } # requiere aprobaci√≥n en GitHub
    #environment:
    #  name: github-pages
    #  url: ${{
    #steps.deployment.outputs.page_url }}
    env:
      SITE_NAME: ${{ vars.SITE_NAME }}
      API_TOKEN: ${{ secrets.API_TOKEN }}
      PROD_WEBHOOK_URL: ${{ secrets.PROD_WEBHOOK_URL }} # si lo creaste en el environment
    steps:
      - uses: actions/checkout@v4

      - name: Probar variable y secreto (sin exponerlos)
        run: |
          echo "Sitio: $SITE_NAME"
          # Validar que existen los secretos sin imprimirlos
          [ -n "$API_TOKEN" ] || (echo "Falta API_TOKEN"; exit 1)
          echo "Longitud API_TOKEN: $(printf %s "$API_TOKEN" | wc -c)"
          [ -n "$PROD_WEBHOOK_URL" ] && echo "Webhook definido" || echo "Sin webhook (opcional)"

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: .
      - id: deployment
        uses: actions/deploy-pages@v4
